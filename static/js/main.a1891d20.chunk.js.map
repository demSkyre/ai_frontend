{"version":3,"sources":["services/ProductoService.js","contexts/ProductoContext.jsx","components/ProductoForm.jsx","components/ProductoList.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductoService","baseUrl","producto","axios","post","this","then","res","data","get","put","_id","id","delete","ProductoContext","createContext","ProductoContextProvider","props","productoService","useState","productos","setProductos","editProducto","setEditProductos","useEffect","readAll","Provider","value","createProducto","create","deleteProducto","filter","p","findProducto","find","updateProducto","update","map","children","ProductoForm","isVisible","setIsVisible","useContext","initialProductoState","nombre","precio","fecha_almacen","productoData","setProductoData","updateField","field","console","log","dialogFooter","className","label","icon","onClick","visible","modal","style","width","contentStyle","overflow","header","onHide","footer","onChange","e","target","trim","Date","toISOString","substring","dateFormat","ProductoList","pacientes","findPaciente","float","textAlign","selectionMode","onSelectionChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1891d20.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport class ProductoService {\r\n\r\n    // LOCAL\r\n    // baseUrl = \"http://localhost:8080/api/productos/\";\r\n\r\n    // REMOTE\r\n    baseUrl = \"https://skyre-rest-api.herokuapp.com/api/productos/\";\r\n\r\n    create(producto){\r\n        return axios.post(this.baseUrl+\"producto/\", producto).then(res => res.data);\r\n    }\r\n\r\n    readAll(){\r\n        return axios.get(this.baseUrl).then(res => res.data);\r\n    }\r\n\r\n    update(producto){\r\n        return axios.put(this.baseUrl+\"producto/\"+producto._id, producto).then(res => res.data);\r\n    }\r\n\r\n    delete(id){\r\n        return axios.delete(this.baseUrl+\"producto/\"+id).then(res => res.data);\r\n    }\r\n}","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { ProductoService } from \"../services/ProductoService\";\r\n\r\nexport const ProductoContext = createContext();\r\n\r\nconst ProductoContextProvider = (props) => {\r\n  const productoService = new ProductoService();\r\n\r\n  const [productos, setProductos] = useState([]);\r\n\r\n  const [editProducto, setEditProductos] = useState(null);\r\n\r\n  useEffect(() => {\r\n    productoService.readAll().then((data) => setProductos(data));\r\n  }, [productoService, productos]);\r\n\r\n  const createProducto = (producto) => {\r\n    productoService\r\n      .create(producto)\r\n      .then((data) => setProductos([...productos, data]));\r\n  };\r\n\r\n  const deleteProducto = (id) => {\r\n    productoService\r\n      .delete(id)\r\n      .then(() => setProductos(productos.filter((p) => p._id !== id)));\r\n  };\r\n\r\n  const findProducto = (id) => {\r\n    const producto = productos.find((p) => p._id === id);\r\n\r\n    setEditProductos(producto);\r\n  };\r\n\r\n  const updateProducto = (producto) => {\r\n    productoService\r\n      .update(producto)\r\n      .then((data) =>\r\n        setProductos(\r\n          productos.map((p) => (p._id === producto._id ? data : producto))\r\n        )\r\n      );\r\n\r\n    setEditProductos(null);\r\n  };\r\n\r\n  return (\r\n    <ProductoContext.Provider\r\n      value={{\r\n        createProducto,\r\n        deleteProducto,\r\n        findProducto,\r\n        updateProducto,\r\n        editProducto,\r\n        productos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProductoContextProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ProductoContext } from \"../contexts/ProductoContext\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Button } from \"primereact/button\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Calendar } from \"primereact/calendar\";\r\n\r\nconst ProductoForm = (props) => {\r\n  const { isVisible, setIsVisible } = props;\r\n\r\n  const {\r\n    createProducto,\r\n    deleteProducto,\r\n    editProducto,\r\n    updateProducto,\r\n  } = useContext(ProductoContext);\r\n\r\n  const initialProductoState = {\r\n    _id: null,\r\n    nombre: \"\",\r\n    precio: \"\",\r\n    fecha_almacen: null,\r\n  };\r\n\r\n  const [productoData, setProductoData] = useState(initialProductoState);\r\n\r\n  useEffect(() => {\r\n    if (editProducto) setProductoData(editProducto);\r\n  }, [editProducto]);\r\n\r\n  const updateField = (data, field) => {\r\n    setProductoData({\r\n      ...productoData,\r\n      [field]: data,\r\n    });\r\n\r\n    console.log(productoData);\r\n  };\r\n\r\n  const _deleteProducto = () => {\r\n    if (editProducto) {\r\n      deleteProducto(productoData._id);\r\n      setProductoData(initialProductoState);\r\n    }\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const saveProducto = () => {\r\n    if (!editProducto) {\r\n      createProducto(productoData);\r\n    } else {\r\n      updateProducto(productoData);\r\n    }\r\n    setProductoData(initialProductoState);\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const dialogFooter = (\r\n    <div className=\"ui-dialog-buttonpane p-clearfix\">\r\n      <Button label=\"Delete\" icon=\"pi pi-times\" onClick={_deleteProducto} />\r\n      <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveProducto} />\r\n    </div>\r\n  );\r\n\r\n  const clearSelected = () => {\r\n    setIsVisible(false);\r\n    setProductoData(initialProductoState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        visible={isVisible}\r\n        modal={true}\r\n        style={{ width: \"420px\" }}\r\n        contentStyle={{ overflow: \"visible\" }}\r\n        header=\"Detalles del Producto\"\r\n        onHide={() => clearSelected()}\r\n        footer={dialogFooter}\r\n      >\r\n        <div className=\"p-grid p-fluid\">\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n            <InputText\r\n              value={productoData.nombre}\r\n              onChange={(e) => updateField(e.target.value.trim(), \"nombre\")}\r\n            />\r\n            <label>Nombre:</label>\r\n          </div>\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n          <InputNumber\r\n              value={productoData.precio}\r\n              onChange={(e) => updateField(e.target.value, \"precio\")}\r\n            />\r\n            <label>Precio:</label>\r\n          </div>\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n            <Calendar\r\n              value={\r\n                productoData.fecha_almacen &&\r\n                new Date(productoData.fecha_almacen + \" \")\r\n              }\r\n              onChange={(e) =>\r\n                updateField(\r\n                  e.target.value.toISOString().substring(0, 10),\r\n                  \"fecha_almacen\"\r\n                )\r\n              }\r\n              dateFormat=\"yy-mm-dd\"\r\n            />\r\n            <label>Fecha en Almacen:</label>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductoForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Panel } from \"primereact/panel\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Button } from \"primereact/button\";\r\nimport { ProductoContext } from \"../contexts/ProductoContext\";\r\nimport ProductoForm from \"./ProductoForm\";\r\n\r\nconst ProductoList = () => {\r\n  const { pacientes, findPaciente } = useContext(ProductoContext);\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const savePaciente = (id) => {\r\n    findPaciente(id);\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const footer = (\r\n    <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\r\n      <Button\r\n        style={{ float: \"left\" }}\r\n        icon=\"pi pi-plus\"\r\n        label=\"Add\"\r\n        onClick={() => setIsVisible(true)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel header=\"LISTA DE PRODUCTOS\" style={{ textAlign: \"center\" }}>\r\n        <DataTable\r\n          value={pacientes}\r\n          selectionMode=\"single\"\r\n          onSelectionChange={(e) => savePaciente(e.value._id)}\r\n          footer={footer}\r\n        >\r\n          <Column field=\"_id\" header=\"Id\" />\r\n          <Column field=\"nombre\" header=\"Nombre\" />\r\n          <Column field=\"precio\" header=\"Precio\" />\r\n          <Column field=\"fecha_almacen\" header=\"Fecha en Almacen\" />\r\n        </DataTable>\r\n      </Panel>\r\n      <ProductoForm isVisible={isVisible} setIsVisible={setIsVisible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductoList;\r\n","import React from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport ProductoContextProvider from './contexts/ProductoContext';\r\nimport ProductoList from './components/ProductoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <ProductoContextProvider>\r\n            <ProductoList/>\r\n        </ProductoContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}